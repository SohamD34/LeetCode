{"id":958194673,"question_id":104,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1685184199,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/958194673/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxD(TreeNode* node){\n        if (node == NULL)\n            return 0;\n        else {\n            int lDepth = maxD(node->left);\n            int rDepth = maxD(node->right);\n\n            if (lDepth > rDepth)\n                return (lDepth + 1);\n            else\n                return (rDepth + 1);\n        }\n    }\n    int maxDepth(TreeNode* root) {\n        return maxD(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}