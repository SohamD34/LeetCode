{"id":1000944019,"question_id":75,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1690035016,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1000944019/","is_pending":"Not Pending","title":"Sort Colors","memory":"8.3 MB","code":"class Solution {\npublic:\n    void sortColors(vector<int>& nums) {\n        \n        //  since nums[i] is either 1,2,3 it is very helpful to use count sort here.\n        //  this is a very intuitive method for lower number of unique elements\n\n        // Step 1 : Initialise a counter for each of the three elements - 1,2,3.\n        int count0 = 0;\n        int count1 = 0;\n        int count2 = 0;\n\n        // now traverse the array and update the count of each elements\n\n        for(int i=0; i<nums.size(); i++){\n            if(nums[i]==0){\n                count0 += 1;\n            }\n            else if(nums[i]==1){\n                count1 += 1;\n            }\n            else{\n                count2 += 1;\n            }\n        }\n\n        // now we can update the values in the nums array in place.\n        // Update 0s first from index 0 to count0, 1s from count0+1 to count0+count1+1 \n        // and then remaining 2s\n\n        for(int i=0; i<count0; i++){\n            nums[i] = 0;\n        }\n        for(int i=count0; i<count0+count1; i++){\n            nums[i] = 1;\n        }\n        for(int i=count0+count1; i<count0+count1+count2; i++){\n            nums[i] = 2;\n        }\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-colors","has_notes":false,"flag_type":1}