{"id":1000906498,"question_id":1993,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1690031196,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1000906498/","is_pending":"Not Pending","title":"Sum of All Subset XOR Totals","memory":"23.7 MB","code":"class Solution {\npublic:\n    void subsetsUtil(vector<int>& A, vector<vector<int> >& res,vector<int>& subset, int index){\n        res.push_back(subset);\n\n        for (int i = index; i < A.size(); i++) {\n\n            subset.push_back(A[i]);\n            subsetsUtil(A, res, subset, i + 1);\n            subset.pop_back();\n        }\n        return;\n    }\n\n    vector<vector<int> > subsets(vector<int>& A){\n        vector<int> subset;\n        vector<vector<int> > res;\n\n        int index = 0;\n        subsetsUtil(A, res, subset, index);\n    \n        return res;\n    }\n\n    int subsetXORSum(vector<int>& nums) {\n        \n        int xor_sum = 0;\n        int n = nums.size();\n\n        vector<vector<int>> res = subsets(nums);\n\n        for(auto i:res){\n            int xor_val = 0;\n            for(auto j:i){\n                xor_val^=j;\n            }\n            xor_sum += xor_val;\n        }\n        return xor_sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"sum-of-all-subset-xor-totals","has_notes":false,"flag_type":1}