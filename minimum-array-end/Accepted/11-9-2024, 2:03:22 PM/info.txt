{"id":1447428456,"question_id":3394,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1731141202,"status":10,"status_display":"Accepted","runtime":"1764 ms","url":"/submissions/detail/1447428456/","is_pending":"Not Pending","title":"Minimum Array End","memory":"8.5 MB","code":"class Solution {\npublic:\n    long long minEnd(int n, int x) {\n        \n        // a & b & c = x\n        // So, in any case, the bits of x that are 1 must be 1 in a, b, c.\n        // Now with this constraint, the minimum number we can achieve is 'x' itself.\n        // So, a = x as (a < b < c).\n\n        // a = x;\n\n        // Now for the next number -- it has to be greater than a, but at the same time, it should satisfy the AND constraint.\n\n        // If a = 101 --> b = a+1 = 110\n        // a & b --> 101 & 110 --> 100 so we lost the 1 in the last bit which violated AND constraint.\n        // So I need to find the number that keeps the 1s in the same place & allows 0 in other places.\n\n        // b = (a+1) | a;\n\n        // Similarly for c ->\n\n        // c = (b+1) | a;\n\n        long long prev = x;\n\n        for(int i=0; i<n-1; i++){\n            prev = (prev + 1) | x;\n        }\n\n        return prev;\n    }\n};","compare_resulttitle_slug":"minimum-array-end","has_notes":false,"flag_type":1}