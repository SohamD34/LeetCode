{"id":1023101129,"question_id":199,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1692198058,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1023101129/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n\n    vector<int> levelOrder(TreeNode* root) {\n\n        vector<int> v;\n        queue<TreeNode*> q;\n\n        if(root){\n            q.push(root);\n        } \n        \n        while (q.size()) {\n\n            int len = q.size();\n            vector<int> row;\n\n            while (len--) {\n                TreeNode* node = q.front();\n                \n                if(node->left){\n                    q.push(node->left);\n                }\n                if(node->right){\n                    q.push(node->right);\n                }\n\n                row.push_back(node->val);\n                q.pop();\n            } \n\n            v.push_back(row[row.size()-1]);\n        }\n        return v; \n    }\n\n    vector<int> rightSideView(TreeNode* root) {\n        \n        return levelOrder(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}