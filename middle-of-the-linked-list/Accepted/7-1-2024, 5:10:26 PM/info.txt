{"id":1305790899,"question_id":908,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1719834026,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1305790899/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"8.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n\n        ListNode* fast = head;\n        ListNode* slow = head;\n\n        while(fast->next){\n            fast = fast->next;\n            if(fast->next){\n                fast = fast->next;\n            }\n\n            slow = slow->next;\n        }\n        \n        return slow;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}