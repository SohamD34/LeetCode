{"id":1028661138,"question_id":967,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1692714375,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1028661138/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"10.4 MB","code":"class Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        \n        int n = matrix.size();\n\n        for(int i=1; i<n; i++){\n            for(int j=0; j<n; j++){\n\n                if(j==0){\n                    matrix[i][j] = matrix[i][j] + min(matrix[i-1][j], matrix[i-1][j+1]);\n                }\n                else if(j==n-1){\n                    matrix[i][j] = matrix[i][j] + min(matrix[i-1][j], matrix[i-1][j-1]);\n                }\n                else{\n                    matrix[i][j] = matrix[i][j] + min(min(matrix[i-1][j], matrix[i-1][j+1]), matrix[i-1][j-1]);\n                }\n            }\n        }\n\n        int min_sum = INT_MAX;\n        for(int i=0; i<n; i++){\n            min_sum = min(min_sum, matrix[n-1][i]);\n        }\n\n        return min_sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"flag_type":1}