{"id":1347295949,"question_id":209,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1723004784,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1347295949/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"30.8 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n    \n        int n = nums.size();\n        int sum = 0;\n        int mn = n+1;\n\n        int i = 0;\n        int j = 0;\n\n        while(j < n){\n\n            sum += nums[j];\n\n            while(sum >= target){\n                sum -= nums[i];\n                int len = j-i+1;\n                mn = min(len, mn);\n                i++;\n            }\n            j++;\n        }\n        if(mn == n+1){\n            return 0;\n        }\n        return mn;\n    }\n};","compare_result":"111111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}