{"id":988274164,"question_id":209,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688702700,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/988274164/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.1 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int l = 0, r = 0, n = nums.size(), sum = 0, len = INT_MAX;\n        while (r < n) {\n            sum += nums[r++];\n            while (sum >= s) {\n                len = min(len, r - l);\n                sum -= nums[l++];\n            }\n        }\n        return len == INT_MAX ? 0 : len;\n    }\n};\n","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}