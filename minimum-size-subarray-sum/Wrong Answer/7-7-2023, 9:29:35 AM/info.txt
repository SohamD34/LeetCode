{"id":988271585,"question_id":209,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688702375,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/988271585/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        \n        int start = 0;\n        int end = 0;\n        int min_length = nums.size();\n        int curr_sum = 0;\n\n        while(start <= end && end < nums.size()){\n            if(nums[start] == target){\n                min_length = 1;\n                break;\n            }\n\n            curr_sum += nums[end];\n\n            if(curr_sum < target){\n                end+=1;\n            }\n            else if(curr_sum > target){\n                curr_sum -= nums[start];\n                start+=1;\n            }\n            else{\n                int curr_length = end - start +1;\n                min_length = min(curr_length, min_length);\n                end += 1;\n            }\n        }\n\n        if(min_length == nums.size() && curr_sum != target){\n            return 0;\n        }\n        return min_length;\n\n    }\n};","compare_result":"11101100001000011001","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}