{"id":1023078010,"question_id":102,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1692196389,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1023078010/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n\n        vector<vector<int>> v;\n        queue<TreeNode*> q;\n\n        if(root){\n            q.push(root);\n        } \n\n        while (q.size()) {\n\n            int len = q.size();\n            vector<int> row;\n\n            while (len--) {\n                TreeNode* node = q.front();\n                \n                if(node->left){\n                    q.push(node->left);\n                }\n                if(node->right){\n                    q.push(node->right);\n                }\n\n                row.push_back(node->val);\n                q.pop(); \n            } \n\n            v.push_back(row);\n            free(row);\n        }\n\n        free(q);\n        return v; \n    }\n};\n","compare_result":null,"title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}