{"id":1272037130,"question_id":1121,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1717045897,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1272037130/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"10.9 MB","code":"class Solution {\npublic:\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n\n        int n = arr.size();\n        vector<int> dp(n,0);\n\n        for(int i=0; i<n; i++){\n            int max_val = 0;\n\n            for(int j=1; j<=min(i+1, k); j++){\n\n                max_val = max(max_val, arr[i-j+1]);\n                dp[i] = max(dp[i], (i>=j ? dp[i-j] : 0) + max_val*j);\n            }\n        }\n        return dp[n-1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum","has_notes":false,"flag_type":1}