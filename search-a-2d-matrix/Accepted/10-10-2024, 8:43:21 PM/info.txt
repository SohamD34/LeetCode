{"id":1418148465,"question_id":74,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1728573201,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1418148465/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"12.2 MB","code":"class Solution {\npublic:\n\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        \n        // search the row where the last element is larger than target\n        // Use binary search on columns\n\n        int m = matrix.size();\n        int n = matrix[0].size();\n\n        // Now we have the array in which we have to search for the target\n        // Use binary search to locate the target\n\n        int low = 0;\n        int high = m*n-1;\n\n        while(low <= high){\n            int mid = low + (high - low)/2;\n\n            int elem = matrix[mid/n][mid%n];\n\n            if(elem == target){\n                return true;\n            }\n            else if(elem < target){\n                low = mid+1;\n            }\n            else{\n                high = mid-1;\n            }\n        }\n\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}