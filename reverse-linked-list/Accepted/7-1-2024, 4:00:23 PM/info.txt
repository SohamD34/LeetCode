{"id":1305730700,"question_id":206,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1719829823,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1305730700/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        \n        // ListNode * ptr = head;\n        // vector<int> values;\n        // while(ptr){\n        //     values.push_back(ptr->val);\n        //     ptr = ptr->next;\n        // }\n        \n        // int i = values.size()-1;\n        // ptr = head;\n        // while(i>=0){\n        //     ptr->val = values[i];\n        //     ptr = ptr->next;\n        //     i--;\n        // }\n        // return head;\n\n        if(!head || !head->next){\n            return head;\n        }\n        else{\n            ListNode* reversed_part = reverseList(head->next);\n            ListNode* prev = NULL;\n            head->next->next = head;\n            head->next = prev;\n            return reversed_part;\n        }\n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}