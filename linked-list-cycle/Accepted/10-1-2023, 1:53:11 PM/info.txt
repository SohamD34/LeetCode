{"id":1063866646,"question_id":141,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1696148591,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1063866646/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n    bool hasCycle(ListNode *head) {\n        \n        unordered_map <ListNode*,int> Map;\n\n        while(head){\n            Map[head]++;\n\n            if(Map[head] > 1){\n                return true;\n            }\n\n            head = head->next;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}