{"id":953107228,"question_id":141,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1684469192,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/953107228/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        \n        vector<ListNode *> visited;\n        bool value = false;\n\n        while(head){\n            if((find(visited.begin(),visited.end(),head)==visited.end())){\n                visited.push_back(head);\n            }\n            else{\n                value = true;\n                break;\n            }\n        }\n        return value;\n    }\n};","compare_result":"11011001110111011001000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}