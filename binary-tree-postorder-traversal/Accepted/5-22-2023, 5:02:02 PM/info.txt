{"id":955068536,"question_id":145,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1684755122,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/955068536/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> vec;\n        \n    void postorder( TreeNode* node){\n        \n        if(node->left){\n            postorder(node->left);\n        }\n        if(node->right){\n            postorder(node->right);\n        }\n        vec.push_back(node->val);\n    }\n\n    vector<int> postorderTraversal(TreeNode* root) {\n        if(root==NULL){\n            return vec;\n        }\n        postorder(root);\n        return vec;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}