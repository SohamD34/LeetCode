{"id":1374178409,"question_id":145,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1725110645,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1374178409/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"10.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void PostOrder(TreeNode* root, vector<int>& v){\n\n        if(!root){\n            return;\n        }\n        PostOrder(root->left, v);\n        PostOrder(root->right, v);\n        v.push_back(root->val);\n    }\n\n    vector<int> postorderTraversal(TreeNode* root) {\n        \n        vector<int> v;\n        PostOrder(root, v);\n\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}