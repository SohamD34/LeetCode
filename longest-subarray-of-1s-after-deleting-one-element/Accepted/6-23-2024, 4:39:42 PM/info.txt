{"id":1297682903,"question_id":1586,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1719140982,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1297682903/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"58.5 MB","code":"class Solution {\npublic:\n    // Solution(){\n    //     ios_base::sync_with_stdio(false);\n    //     cin.tie(nullptr);\n    //     cout.tie(nullptr);\n    // }\n    int longestSubarray(vector<int>& nums) {\n        int zeroCount = 0;\n        int longestWindow = 0;\n        int start = 0;\n        \n        for (int i = 0; i < nums.size(); i++) {\n            zeroCount += (nums[i] == 0);\n                          \n            while (zeroCount > 1) {\n                zeroCount -= (nums[start] == 0);\n                start++;\n            }\n            longestWindow = max(longestWindow, i - start);\n        }\n\n        return longestWindow;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}