{"id":962135714,"question_id":61,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1685687077,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/962135714/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n\n    ListNode* rotateRight(ListNode* head, int k) {\n        \n        ListNode* countptr = head;\n        int len = 0;\n\n        while(countptr){\n            len+=1;\n            countptr = countptr->next;\n        }\n\n        if(len > 0){\n            for(int i=0; i<k; i++){\n\n                ListNode* lastptr = head;\n                ListNode* beforelastptr = head;\n\n                for(int j=0; j<len-1; j++){\n                    lastptr = lastptr->next;\n                }\n                for(int j=0; j<len-2; j++){\n                    beforelastptr = beforelastptr->next;\n                }\n\n                lastptr->next = head;\n                beforelastptr->next = NULL;\n                head = lastptr;\n            }\n        }\n        \n        return head;\n\n    }\n};","compare_result":"111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list","has_notes":false,"flag_type":1}