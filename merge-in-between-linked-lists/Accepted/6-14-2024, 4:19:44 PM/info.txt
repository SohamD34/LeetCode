{"id":1288019241,"question_id":1765,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1718362184,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/1288019241/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"98.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n\n        ListNode* curr_node1 = list1;\n        a-=1;\n        while(a--){\n            curr_node1 = curr_node1->next;\n        }\n\n        // cout<<curr_node1->val<<endl;\n\n        ListNode* curr_node2 = list1;\n        b+=1;\n        while(b--){\n            curr_node2 = curr_node2->next;\n        }\n\n        // cout<<curr_node2->val<<endl;\n\n        curr_node1->next = list2;\n        \n        while(curr_node1->next){\n            curr_node1 = curr_node1->next;\n        }\n\n        curr_node1->next = curr_node2;\n\n        return list1; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists","has_notes":false,"flag_type":1}