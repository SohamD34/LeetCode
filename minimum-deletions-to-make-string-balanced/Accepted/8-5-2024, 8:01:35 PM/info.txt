{"id":1345451366,"question_id":1756,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1722868295,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1345451366/","is_pending":"Not Pending","title":"Minimum Deletions to Make String Balanced","memory":"23.7 MB","code":"class Solution {\npublic:\n    int minimumDeletions(string s) {\n\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(NULL);\n        \n        int cnt_b = 0;\n\n        // find out how many b lie before a at a particular position.\n\n        // if curr=='a' -- we might have to delete all 'a' after it -- so count_a to be deleted ++ \n        // else curr='b' -- delete them from beginning -- so count_b++;\n        // at every step - greedy\n\n        int ans = 0;\n\n        for(char c: s){\n            if(c == 'a'){\n                ans += 1;\n            }\n            else{\n                cnt_b += 1;\n            }\n            ans = min(ans, cnt_b);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-string-balanced","has_notes":false,"flag_type":1}