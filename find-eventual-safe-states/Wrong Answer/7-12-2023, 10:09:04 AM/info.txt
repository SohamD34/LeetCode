{"id":992359976,"question_id":820,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1689136744,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992359976/","is_pending":"Not Pending","title":"Find Eventual Safe States","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {\n        \n        set<int> connected_to_terminal;\n\n        for(int i=0; i<graph.size(); i++){\n\n            vector<int> connections = graph[i];\n\n            int count = 0;\n\n            if(connections.size()==0){\n                connected_to_terminal.insert(i);\n            }\n            else{\n                for(auto j:connections){\n                    if(graph[j].size()==0){\n                        count += 1;\n                    }\n                }\n\n                if(count==connections.size()){\n                    connected_to_terminal.insert(i);\n                }\n            }\n            \n        }\n\n        vector<int> ans;\n        for(auto i: connected_to_terminal){\n            ans.push_back(i);\n        }\n        return ans;\n    }\n};","compare_result":"1101111110101111011100001101011111010011111100110000101100110110101000100010001010000000000000000001000000000000","title_slug":"find-eventual-safe-states","has_notes":false,"flag_type":1}