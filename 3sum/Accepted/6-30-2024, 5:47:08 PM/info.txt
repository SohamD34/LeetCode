{"id":1304794859,"question_id":15,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1719749828,"status":10,"status_display":"Accepted","runtime":"1152 ms","url":"/submissions/detail/1304794859/","is_pending":"Not Pending","title":"3Sum","memory":"293.8 MB","code":"class Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        \n        sort(nums.begin(), nums.end());\n\n        // Using set to avoid repeating triplets\n        set<vector<int>> s;\n        vector<vector<int>> output;\n\n        // O(n) loop\n        for (int i = 0; i < nums.size(); i++){\n            \n            // Using two pointer concept O(n log n)\n            int j = i + 1;\n            int k = nums.size() - 1;\n\n            while (j < k) {\n                int sum = nums[i] + nums[j] + nums[k];\n                if (sum == 0) {\n                    s.insert({nums[i], nums[j], nums[k]});\n                    j++;\n                    k--;\n                } \n                else if (sum < 0) {\n                    j++;\n                } \n                else {\n                    k--;\n                }\n            }\n        }\n\n        for(auto vec : s){\n            output.push_back(vec);\n        }\n        return output;\n    \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}