{"id":986890025,"question_id":904,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688556406,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/986890025/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void leaf_nodes(TreeNode *root,vector<int>& v){\n\n        if(root==NULL)\n        return;\n        \n        if(root->left==NULL && root->right==NULL){\n            v.push_back(root->val);\n            return;\n        }\n\n        leaf_nodes(root->left,v);\n        leaf_nodes(root->right,v);\n    }\n\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n\n        vector<int> v1;\n        vector<int> v2;\n\n        leaf_nodes(root1,v1);\n        leaf_nodes(root2,v2);\n\n        return v1==v2;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}