{"id":979999972,"question_id":120,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1687781465,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/979999972/","is_pending":"Not Pending","title":"Triangle","memory":"9.4 MB","code":"class Solution {\npublic:\n    int minimumTotal(vector<vector<int>>& triangle) {\n        \n        int layers = triangle.size();\n\n\t    vector<vector<int>> dp;\n\t    \n\t    for(int i=1; i<=layers; i++){\n\t        vector<int>dplayer;\n\t        for(int j=1; j<=i; j++){\n\t            dplayer.push_back(0);\n\t        }\n\t        dp.push_back(dplayer);\n\t    }\n\t    \n\t    \n\t    dp[0][0] = triangle[0][0];\n\t    \n\t    for(int i=1; i<layers; i++){\n\t        dp[i][0] = dp[i-1][0] + triangle[i][0];\n\t        dp[i][i] = dp[i-1][i-1] + triangle[i][i];\n\t    }\n\t    \n\t    for(int i=1; i<layers; i++){\n\t        for(int j=1; j<i; j++){\n\t            dp[i][j] = triangle[i][j] + min(dp[i-1][j], dp[i-1][j-1]);\n\t        }\n\t    }\n\t    \n\t    int min_sum = dp[layers-1][0];\n\t    for(int i=0; i<layers;i++){\n\t        if(dp[layers-1][i] < min_sum){\n\t            min_sum = dp[layers-1][i];\n\t        }\n\t    }\n\t    \n\n        return min_sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}