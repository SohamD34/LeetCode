{"id":1026606226,"question_id":515,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1692525465,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1026606226/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    vector<int> levelOrder(TreeNode* root) {\n\n        vector<int> row;\n        queue<TreeNode*> q;\n\n        if(root){\n            q.push(root);\n        } \n        \n        while (q.size()) {\n\n            int len = q.size();\n            int max_in_row = q.front()->val;\n            \n            while (len--) {\n                TreeNode* node = q.front();\n                \n                if(node->left){\n                    q.push(node->left);\n                }\n                if(node->right){\n                    q.push(node->right);\n                }\n\n                max_in_row = max(max_in_row, node->val);\n                q.pop();\n            }\n\n            row.push_back(max_in_row);\n        }\n        return row; \n    }\n\n    vector<int> largestValues(TreeNode* root) {\n        return levelOrder(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"flag_type":1}