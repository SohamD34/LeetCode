{"id":1346781484,"question_id":101,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1722961672,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1346781484/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"17.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool mirror(TreeNode* p,TreeNode* q){\n        \n        if(p==NULL && q==NULL){\n            return true;\n        }\n        if(p==NULL || q==NULL){\n            return false;\n        }\n        if(p->val != q->val){\n            return false;\n        }\n        return mirror(p->left,q->right) && mirror(p->right,q->left);;\n        \n    }\n    bool isSymmetric(TreeNode* root) {\n\n        if(mirror(root->left, root->right)!=true){\n            return false;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}