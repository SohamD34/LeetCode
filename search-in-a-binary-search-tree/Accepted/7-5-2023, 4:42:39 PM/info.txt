{"id":986881825,"question_id":783,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688555559,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/986881825/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int value) {\n\n        if(root == NULL){\n            return NULL;\n        }\n        \n        if(root->val == value){\n            return root;\n        }\n        else if(root->val > value){\n            return searchBST(root->left, value);\n        }\n        return searchBST(root->right,value);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}