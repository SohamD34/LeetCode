{"id":989188561,"question_id":2216,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688809472,"status":10,"status_display":"Accepted","runtime":"1056 ms","url":"/submissions/detail/989188561/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        \n        if (head->next == nullptr){\n            return nullptr;\n        }\n\n        ListNode* slow = head;\n        ListNode* fast = head->next->next;\n\n        while (fast != nullptr && fast->next != nullptr) {\n            fast = fast->next->next;\n            slow = slow->next;\n        }\n\n        slow->next = slow->next->next;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}