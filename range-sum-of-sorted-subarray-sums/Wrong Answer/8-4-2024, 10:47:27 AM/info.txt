{"id":1343867060,"question_id":1615,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1722748647,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1343867060/","is_pending":"Not Pending","title":"Range Sum of Sorted Subarray Sums","memory":"N/A","code":"class Solution {\npublic:\n    static const int mod = 7+1e9;\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(nullptr);\n        cout.tie(nullptr);\n    }\n\n    vector<int> get_subarray_sums(vector<int> nums, int n){\n\n        vector<int> subarray_sums;\n\n        for(int start=0; start<n; start++){\n\n            int curr_sum = nums[start];\n            subarray_sums.push_back(curr_sum);\n\n            for(int end=start+1; end<n; end++){\n                curr_sum += nums[end];\n                int val = curr_sum%mod;\n                subarray_sums.push_back(val);\n            }\n        }\n        return subarray_sums;\n    }\n\n    int rangeSum(vector<int>& nums, int n, int left, int right) {\n        \n        vector<int> subarray_sums = get_subarray_sums(nums, n);\n        \n        sort(subarray_sums.begin(), subarray_sums.end());\n\n        long long sum = 0;\n        for(int i=left-1; i<right; i++){\n            sum += subarray_sums[i];\n            // sum %= mod;\n        }\n\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111101111111111111111111111111","title_slug":"range-sum-of-sorted-subarray-sums","has_notes":false,"flag_type":1}