{"id":1419654640,"question_id":152,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1728713223,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1419654640/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"16.7 MB","code":"class Solution {\npublic:\n    Solution(){\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n    }\n\n    int maxProduct(vector<int>& nums) {\n\n        int front_max = INT_MIN;\n        int back_max = INT_MIN;\n        int back_prod = 1;\n        int front_prod = 1;\n        int n = nums.size();\n\n        for(int i=0; i<n; i++){\n            \n            front_prod *= nums[i];\n            back_prod *= nums[n-1-i];\n\n            front_max = max(front_prod, front_max);\n            back_max = max(back_max, back_prod);\n            \n            if(front_prod == 0){\n                front_prod = 1;\n            }\n            if(back_prod == 0){\n                back_prod = 1;\n            }\n        }\n        return max(front_max, back_max);\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}