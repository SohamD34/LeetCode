{"id":1297279738,"question_id":3461,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1719111673,"status":10,"status_display":"Accepted","runtime":"239 ms","url":"/submissions/detail/1297279738/","is_pending":"Not Pending","title":"Find the Minimum Area to Cover All Ones I","memory":"132.3 MB","code":"class Solution {\npublic:\n    int minimumArea(vector<vector<int>>& grid) {\n        int x_min = -1;\n        int x_max = -1;\n        int y_min = -1;\n        int y_max = -1;\n        \n        int m = grid.size();     // rows\n        int n = grid[0].size();  // cols\n        \n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                \n                \n                if(grid[i][j] == 1){\n                    x_max = max(x_max, i);\n                    y_max = max(y_max, j);\n                    \n                    x_min = (x_min==-1) ? i : min(x_min,i);\n                    y_min = (y_min==-1) ? j : min(y_min, j);\n                    \n                }\n            }\n        }\n        // cout<<x_min<<\" \"<<x_max<<\" \"<<y_min<<\" \"<<y_max<<endl;\n        return (x_max - x_min + 1)*(y_max - y_min + 1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-area-to-cover-all-ones-i","has_notes":false,"flag_type":1}