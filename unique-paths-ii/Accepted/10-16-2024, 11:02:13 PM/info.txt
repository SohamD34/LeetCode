{"id":1424524092,"question_id":63,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1729099933,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1424524092/","is_pending":"Not Pending","title":"Unique Paths II","memory":"10.3 MB","code":"class Solution {\npublic:\n    void print(vector<vector<int>> grid){\n        for(auto i:grid){\n            for(auto j:i){\n                cout<<j<<\" \";\n            }\n            cout<<endl;\n        }\n        cout<<endl;\n    }\n\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        \n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n\n        if(obstacleGrid[0][0] || obstacleGrid[m-1][n-1]){\n            return 0;\n        }\n\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                obstacleGrid[i][j]*=-1;\n            }\n        }\n\n        // print(obstacleGrid);\n\n        obstacleGrid[0][0] = 1;\n\n        for(int i=1; i<n; i++){\n            if(obstacleGrid[0][i] != -1){\n                obstacleGrid[0][i] = 1;\n            }\n            else{\n                break;\n            }\n        }\n\n        for(int i=1; i<m; i++){\n            if(obstacleGrid[i][0] != -1){\n                obstacleGrid[i][0] = 1;\n            }\n            else{\n                break;\n            }\n        }\n\n        // print(obstacleGrid);\n\n        for(int i=1; i<m; i++){\n            for(int j=1; j<n; j++){\n                \n                if(obstacleGrid[i][j] != -1){\n                    obstacleGrid[i][j] += ((obstacleGrid[i-1][j]==-1)?0:obstacleGrid[i-1][j]);\n                    obstacleGrid[i][j] += ((obstacleGrid[i][j-1]==-1)?0:obstacleGrid[i][j-1]);\n                }\n            }\n        }\n\n        return obstacleGrid[m-1][n-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}