{"id":986890663,"question_id":2236,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1688556470,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/986890663/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int pairSum(ListNode* head) {\n        int max_sum = 0;\n        ListNode* front_ptr = head;\n        ListNode* rear_ptr = head;\n\n        while(ptr != NULL){\n            arr.push_back(ptr->val);\n            ptr = ptr->next;\n        }\n\n        for(int i=0;i<arr.size()/2;i++){\n            if ((arr[i] + arr[arr.size()-i-1]) > max_sum){\n                max_sum = arr[i] + arr[arr.size()-i-1];\n            }\n        }\n\n        return max_sum;\n    }\n};","compare_result":null,"title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false,"flag_type":1}