{"id":952827010,"question_id":21,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1684427052,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/952827010/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n\n        ListNode* finalptr;\n\n        if(list1->val > list2->val){\n            finalptr = list2;\n        }\n        else{\n            finalptr = list1;\n        }\n\n        ListNode* currptr = finalptr;\n        ListNode* ptr1 = list1->next;\n        ListNode* ptr2 = list2;\n\n        while(currptr!=NULL || ptr1!=NULL || ptr2!=NULL){\n\n            if(ptr1!=NULL && ptr2!=NULL){\n                if(ptr1->val <= ptr2->val){\n                    currptr->next = ptr1;\n                    ptr1 = ptr1->next;\n                }\n                else{\n                    currptr->next = ptr2;\n                    ptr2 = ptr2->next;\n                }\n                currptr = currptr->next;\n            }\n            else{\n                if(ptr1==NULL){\n                    currptr->next = ptr2;\n                    break;\n                }\n                else{\n                    currptr->next = ptr1;\n                }\n            }\n        }\n\n        return finalptr;\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}