{"id":979087239,"question_id":1427,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1687674407,"status":10,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/979087239/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"85.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> vec;\n\n    void inorder(TreeNode* root){\n        if (root != nullptr) {\n            inorder(root->left);\n            vec.push_back(root->val);\n            inorder(root->right);\n        }\n    }\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        \n        inorder(root1);\n        inorder(root2);\n        sort(vec.begin(),vec.end());\n\n        return vec;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}