{"id":954318493,"question_id":94,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1684647613,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/954318493/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"9.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    vector<int> inorderTraversal(TreeNode* root) {\n\n        if(root == NULL){\n            return {};\n        }\n\n        vector<int> ans = inorderTraversal(root->left);\n        ans.push_back(root->val);\n        vector<int> temp = inorderTraversal(root->right);\n\n        for(auto i: temp){\n            ans.push_back(i);\n        }\n        return ans;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}