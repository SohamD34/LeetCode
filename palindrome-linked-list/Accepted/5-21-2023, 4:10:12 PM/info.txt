{"id":954450835,"question_id":234,"lang":"cpp","lang_name":"C++","time":"1 year, 6 months","timestamp":1684665612,"status":10,"status_display":"Accepted","runtime":"277 ms","url":"/submissions/detail/954450835/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"128.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        \n        vector<int> forward;\n        while(head){\n            forward.push_back(head->val);\n            head = head->next;\n        }\n\n        int front = 0;\n        int back = forward.size()-1;\n        bool value = true;\n\n        while(back>front){\n            if(forward[front] != forward[back]){\n                value = false;\n                break;\n            }\n            front+=1;\n            back-=1;\n        }\n        return value;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}