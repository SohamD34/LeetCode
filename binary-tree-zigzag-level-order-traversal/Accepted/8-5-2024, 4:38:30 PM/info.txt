{"id":1345265015,"question_id":103,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1722856110,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1345265015/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"13.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void zigzagLevelOrder(TreeNode * root , vector<vector<int>> &ans){\n        \n        stack<TreeNode*> current;\n        stack<TreeNode*> next_layer;\n\n        current.push(root);\n        int level = 1;\n\n        vector<int> v;\n\n        while(current.size() > 0){\n\n            TreeNode* front = current.top();\n            current.pop();\n            v.push_back(front->val);\n\n            if(level%2 == 1){\n                if(front->left != NULL){\n                    next_layer.push(front->left);\n                }\n                if(front -> right != NULL){\n                    next_layer.push(front->right);\n                }\n            }\n            else{\n                if(front ->right != NULL){\n                    next_layer.push(front->right);\n                }\n                if(front ->left != NULL){\n                    next_layer.push(front ->left);\n                }\n            }\n            \n            if(current.size() == 0){\n\n                swap(next_layer , current);\n                ans.push_back(v);\n\n                v.clear();\n                level++;\n            }\n        }\n    }\n\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        \n        vector<vector<int>> ans;\n\n        if(root == NULL){\n            return ans;\n        }\n        \n        zigzagLevelOrder(root, ans);\n\n        return ans;\n    }\n    \n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}