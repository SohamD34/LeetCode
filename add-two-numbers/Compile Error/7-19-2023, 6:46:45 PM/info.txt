{"id":998469107,"question_id":2,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1689772605,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/998469107/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"\n//  Definition for singly-linked list.\n// struct ListNode{\n//     int val;\n//     ListNode *next;\n//     ListNode() : val(0), next(nullptr) {}\n//     ListNode(int x) : val(x), next(nullptr) {}\n//     ListNode(int x, ListNode *next) : val(x), next(next) {}\n// };\n\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n\n        int val1 = 0;\n        int power = 0; \n        int len1 = 0;\n        ListNode* ptr1 = l1;\n        while(ptr1){\n            len1 += 1;\n            val1 = val1 + (ptr1->val)*(pow(10,power));\n            power += 1; \n            ptr1 = ptr1->next;\n        }\n\n        int val2 = 0;\n        power = 0; \n        int len2 = 0;\n        ListNode* ptr2 = l2;\n        while(ptr2){\n            len2 += 1;\n            val2 = val2 + (ptr2->val)*(pow(10,power));\n            power += 1; \n            ptr2 = ptr2->next;\n        }\n        \n        int ans = val1 + val2;\n\n        cout<<ans<<endl;\n        \n        ListNode* currptr = (len1>len2)?l1:l2;\n        ListNode* ansptr = currptr;\n\n        while(currptr != NULL){\n            int num = ans%10;\n            cout<<num<<endl;\n            currptr->val = num;\n            ans = ans/10;\n            currptr = currptr->next;\n        }\n\n        currptr = (len1>len2)?l1:l2;\n\n        for(int i=0; i<len1-1; i++){\n            currptr = currptr->next;\n        }\n\n        if(ans!=0){\n            ListNode carrynode = ListNode(ans);\n            currptr->next = carrynode;\n        }\n\n        return ansptr;\n    }\n};","compare_result":null,"title_slug":"add-two-numbers","has_notes":false,"flag_type":1}